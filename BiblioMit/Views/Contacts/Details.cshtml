@model BiblioMit.Models.Contact

@{
    ViewData["Title"] = "Detalles";
}
<h2>Detalles</h2>

<div>
    <h4>Contacto</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.ConsessionOrResearch.Company.BusinessName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ConsessionOrResearch.Company.BusinessName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ConsessionOrResearch.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ConsessionOrResearch.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Position)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Position)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Last)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Last)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.OpenHr)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OpenHr) - @Html.DisplayFor(model => model.CloseHr)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Phone)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Phone)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ConsessionOrResearch.Address)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ConsessionOrResearch.Address)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Status)
        </dd>
    </dl>
</div>
@if (Model.Status != ContactStatus.Approved)
{
    @if (User.HasClaim(nameof(UserClaims.Contacts), nameof(UserClaims.Contacts)) && (User.IsInRole(nameof(RoleData.Editor)) || User.IsInRole(nameof(RoleData.Administrator)) ) )
    {
        <form asp-action="SetStatus" asp-controller="Contacts" style="display:inline;">
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="status" value="@ContactStatus.Approved" />
            <button type="submit" class="btn btn-xs btn-success">Aprobar</button>
        </form>
    }  
}
@if (Model.Status != ContactStatus.Rejected)
{
    @if (User.HasClaim(nameof(UserClaims.Contacts), nameof(UserClaims.Contacts)) && (User.IsInRole(nameof(RoleData.Editor)) || User.IsInRole(nameof(RoleData.Administrator)) ) )
    {
        <form asp-action="SetStatus" asp-controller="Contacts" style="display:inline;">
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="status" value="@ContactStatus.Rejected" />
            <button type="submit" class="btn btn-xs btn-danger">Rechazar</button>
        </form>
    }
}
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Editar</a> |
    <a asp-action="Index">Volver al listado de contactos</a>
</div>
